Tell me about yourlself
Deployement: AWS, Docker, Nvidia Jetson
Activation function and optmizers: ReLu, Leaky ReLu, Sigmoid activations | Adam, SGD, RMSProp, AdaGrad
Loss Functions: Cross Entropy, MSE
Frameworks of ML and DL: Tensorflow, PyTorch, Caffe, Keras, Scikit-learn
Types of ML: Supervised, unsupervised, semi-supervised, reinforcement learning
Outliers: Datapoints that singnificantly deviates from other observations
Checkpoints in DL:Saved snapshots of model during training
Logistic regression use: Classification
Algorithms in ML, DL: Linear, Logistic Regression, SVM, KNN, K-Means, Naive Bayes, Descison Tree, Random Forest
Random forest is based on: Decision Tree
CNN Algorithms or pretrained models: AlexNet, VGG, GoogleNet, ResNet, ConvNeXt, YOLO family, R-CNN family, SSD, RetinaNet, CenterNet, DETR, U-Net, DeepLab, OWLv2, Grounding DINO
OCR live projects
Team members: 4
Set method in Python: unique elements
No error in python: Exception handling
Evaluation metrics in ML: Regression- MAE, MSE, RMSE, R-Sq Classification- Accuracy, Precsion, Recall, F1 score, AUC-ROC
Sequencial and Parallel algos: Linear-Regressions Parallel- SGD, Random Forest, XGBoost, CNN